<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:FinBalance2.ViewModels"
        xmlns:comp="using:FinBalance2.Views.Components"
        xmlns:model="using:FinBalance2.Models"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="FinBalance2.Views.MainWindow"
        Icon="/Assets/money-icon.ico"
        Title="Registro de movimentações e Balanço financeiro"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        ExtendClientAreaToDecorationsHint="True">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Panel>
        <ExperimentalAcrylicBorder
            IsHitTestVisible="False">
            <ExperimentalAcrylicBorder.Material>
                <ExperimentalAcrylicMaterial
                    BackgroundSource="Digger"
                    TintColor="Black"
                    TintOpacity="1"
                    MaterialOpacity="0.50"/>
            </ExperimentalAcrylicBorder.Material>
        </ExperimentalAcrylicBorder>
        <Grid
            ColumnDefinitions="*"
            RowDefinitions="Auto, Auto, *, Auto"
            Margin="15">
            <Border Classes="AppTitle">
                <StackPanel Grid.Row="0" Classes="AppTitle">
                    <PathIcon 
                        Classes="AppTitle" 
                        Data="{StaticResource money_regular}" 
                        RenderTransform="scale(1.5)"/>
                    <TextBlock Classes="AppTitle">
                        Movimentações e Balanço Financeiro
                    </TextBlock>
                </StackPanel> 
            </Border>
            <Grid
                Grid.Row="1"
                ColumnDefinitions="*"
                RowDefinitions="Auto,Auto,Auto">
                <StackPanel
                    Grid.Row="0"
                    Orientation="Horizontal"
                    Margin="0, 7, 0, 7">
                    <Label
                        Margin="0,0,10,0"
                        VerticalAlignment="Center">
                        Tipo:
                    </Label>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <vm:ComparisonConverter x:Key="ComparisonConverter" />
                        </StackPanel.Resources>
                        <RadioButton
                            GroupName="BalanceType"
                            Classes="MovementTypeSelector"
                            IsChecked="{Binding SelectedBalancePeriodType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:BalancePeriodType.Day}}"
                            >
                            Diário
                        </RadioButton>
                        <RadioButton
                            GroupName="BalanceType"
                            Classes="MovementTypeSelector"
                            IsChecked="{Binding SelectedBalancePeriodType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:BalancePeriodType.Week}}"
                            >
                            Semanal
                        </RadioButton>
                        <RadioButton
                            GroupName="BalanceType"
                            Classes="MovementTypeSelector"
                            IsChecked="{Binding SelectedBalancePeriodType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:BalancePeriodType.Month}}"
                            >
                            Mensal
                        </RadioButton>
                        <RadioButton
                            GroupName="BalanceType"
                            Classes="MovementTypeSelector"
                            IsChecked="{Binding SelectedBalancePeriodType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:BalancePeriodType.Year}}"
                            >
                            Anual
                        </RadioButton>
                        <RadioButton
                            GroupName="BalanceType"
                            Classes="MovementTypeSelector"
                            IsChecked="{Binding SelectedBalancePeriodType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static vm:BalancePeriodType.Period}}"
                            >
                            Período
                        </RadioButton>
                    </StackPanel>
                    
                </StackPanel>
                <Panel Grid.Row="1">
                    <ContentControl 
                        Content="{Binding CurrentPeriodPropertiesComponent}"/> 
                </Panel>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button
                        Command="{Binding ViewFinMovementCommand}"
                        Margin="0, 7, 7, 7">
                        <StackPanel Orientation="Horizontal">
                            <PathIcon Data="{StaticResource list_regular}" />
                            <TextBlock Margin="10, 0, 0, 0">Visualizar</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding SaveFinMovementCommand}"
                        Margin="0, 7, 7, 7"
                        IsEnabled="{Binding !IsSavingData}">
                        <StackPanel Orientation="Horizontal">
                            <PathIcon Data="{StaticResource save_regular}" />
                            <TextBlock Margin="10, 0, 0, 0">Salvar alterações</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding CreateFinMovementCommand}"
                        Margin="0, 7, 0, 7">
                        <StackPanel Orientation="Horizontal">
                            <PathIcon Data="{StaticResource document_regular}" />
                            <TextBlock Margin="10, 0, 0, 0">Novo registro</TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>
                
            </Grid>
            <ProgressBar
                Grid.Row="2"
                IsIndeterminate="True"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Foreground="Gold"
                IsVisible="{Binding IsLoadingData}"
                />
            <DataGrid 
                Grid.Row="2" 
                IsVisible="{Binding !IsLoadingData}"
                Items="{Binding LoadedMovements}" AutoGenerateColumns="False" >
                <DataGrid.Resources>
                    <vm:IncomeAndExpensesConverter x:Key="IncomeAndExpensesConverter"/>
                    <vm:SortIncomeExpenseStatus x:Key="SortIncomeExpenseStatusComparer"/>
                    <vm:EditDateConverter x:Key="EditDateConverter"/>
                    <vm:EditValueConverter x:Key="EditValueConverter"/>
                    <vm:SortByDate x:Key="SortByDateComparer"/>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header=""
                                            CustomSortComparer="{StaticResource SortIncomeExpenseStatusComparer}"
                                            CanUserSort="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="model:FinMovement">
                                <ContentPresenter Content="{Binding Value, Converter={StaticResource IncomeAndExpensesConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="ID"  Binding="{Binding Id}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Nome" Binding="{Binding Name}" />
                    <DataGridTemplateColumn Header="Data"
                                            CustomSortComparer="{StaticResource SortByDateComparer}"
                                            CanUserSort="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="model:FinMovement">
                                <TextBlock Text="{Binding Date, StringFormat='{}{0:d}'}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate DataType="model:FinMovement">
                                <DatePicker SelectedDate="{Binding Date, Converter={StaticResource EditDateConverter}}" HorizontalAlignment="Stretch"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Valor Movimentado"
                                            CustomSortComparer="{StaticResource SortIncomeExpenseStatusComparer}"
                                            CanUserSort="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="model:FinMovement">
                                <TextBlock Text="{Binding Value, StringFormat='{}{0:C}'}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate DataType="model:FinMovement">
                                <NumericUpDown 
                                    Value="{Binding Value, Converter={StaticResource EditValueConverter}}" 
                                    Increment="0.01"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn 
                        Header="Notas"
                        Binding="{Binding Notes}"
                        Width="*"/>
                    <DataGridTemplateColumn
                        Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="model:FinMovement">
                                <Button
                                    MinWidth="64"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.DeleteFinMovementCommand}"
                                    CommandParameter="{Binding}">
                                    <PathIcon Data="{StaticResource delete_regular}" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid RowDefinitions="Auto" ColumnDefinitions="*,Auto" Grid.Row="3">
                <Grid.Resources>
                    <vm:BalanceValueStyleConverter x:Key="BalanceValueStyleConverter"/>
                </Grid.Resources>
                <TextBlock Grid.Column="0" Text="{Binding StatusMessage}" />
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Margin="0, 0, 7, 0">Saldo: </TextBlock>
                    <TextBlock
                        Text="{Binding BalanceValue, StringFormat='{}{0:C}'}"
                        FontWeight="DemiBold"
                        Foreground="{Binding BalanceValue, Converter={StaticResource BalanceValueStyleConverter}}"
                    />
                </StackPanel>
            </Grid>
        </Grid>
    </Panel>
</Window>
